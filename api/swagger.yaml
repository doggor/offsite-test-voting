---
swagger: "2.0"
info:
  description: "A simple voting system API."
  version: "1.0.0"
  title: "Voting System"
  contact:
    email: "seangle369@yahoo.com.hk"
  license:
    name: "UNLICENSED"
host: "localhost:8080"
basePath: "/api/v1"
tags:
- name: "campaigns"
  description: "Campaigns for voting"
- name: "users"
  description: "Users that are authenticated as voters (Not a completed member system.)"
- name: "pages"
  description: "HTML pages for demonstrations"
- name: "socket.io"
  description: "SocketIO connection entry for receiving vote count updates"
schemes:
- "http"
paths:
  /campaigns:
    get:
      tags:
      - "campaigns"
      summary: "List all campaigns"
      operationId: "listCampaigns"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "query"
        description: "Voter's user ID"
        required: false
        type: "string"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/CampaignWithVoted"
        "400":
          description: "Invalid user ID"
      x-swagger-router-controller: "Campaigns"
    post:
      tags:
      - "campaigns"
      summary: "Add a new campaign"
      operationId: "addCampaign"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Campaign to add"
        required: true
        schema:
          $ref: "#/definitions/Campaign"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Campaign"
        "400":
          description: "Invalid parameters"
      x-swagger-router-controller: "Campaigns"
  /campaigns/{campaignId}:
    get:
      tags:
      - "campaigns"
      summary: "Find the existed campaign"
      operationId: "findCampaign"
      produces:
      - "application/json"
      parameters:
      - name: "campaignId"
        in: "path"
        description: "ID of campaign"
        required: true
        type: "string"
      - name: "userId"
        in: "query"
        description: "Voter's user ID"
        required: false
        type: "string"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/CampaignWithVoted"
        "400":
          description: "Invalid user ID"
        "404":
          description: "Campaign not found"
      x-swagger-router-controller: "Campaigns"
    put:
      tags:
      - "campaigns"
      summary: "Update an existing campaign"
      operationId: "updateCampaign"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "campaignId"
        in: "path"
        description: "ID of campaign"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CampaignUpdateRequest"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Campaign"
        "400":
          description: "Invalid parameters"
        "404":
          description: "Campaign not found"
      x-swagger-router-controller: "Campaigns"
    delete:
      tags:
      - "campaigns"
      summary: "Delete an existing campaign"
      operationId: "deleteCampaign"
      parameters:
      - name: "campaignId"
        in: "path"
        description: "ID of campaign"
        required: true
        type: "string"
      responses:
        "200":
          description: "Successful operation"
        "404":
          description: "Campaign not found"
      x-swagger-router-controller: "Campaigns"
  /campaigns/{campaignId}/votes:
    post:
      tags:
      - "campaigns"
      summary: "Vote to the campaign"
      operationId: "voteCampaign"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "campaignId"
        in: "path"
        description: "ID of campaign"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/VoteCreationRequest"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid user ID"
        "403":
          description: "The campaign no longer available for voting"
        "404":
          description: "Campaign not found"
      x-swagger-router-controller: "Campaigns"
  /users:
    get:
      tags:
      - "users"
      summary: "List all users"
      operationId: "listUser"
      parameters: []
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
      x-swagger-router-controller: "Users"
    post:
      tags:
      - "users"
      summary: "Add new user"
      operationId: "addUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UserCreationRequest"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid parameters"
        "403":
          description: "THe HKID already used for registration"
      x-swagger-router-controller: "Users"
  /socket.io:
    get:
      tags:
      - "socket.io"
      summary: "connection entry. Usage: socket.on('voteUpdate', (msg: {msg: Campaign}) => void)"
      operationId: "connectSocketIO"
      parameters: []
      responses:
        "101":
          description: "Connection Upgrade websocket"
  /pages/charts:
    get:
      tags:
      - "pages"
      summary: "HTML page"
      operationId: "getPage"
      produces:
      - "text/html"
      parameters: []
      responses:
        "200":
          description: "HTML page"
      x-swagger-router-controller: "Pages"
definitions:
  Campaign:
    type: "object"
    properties:
      id:
        type: "string"
        readOnly: true
      name:
        type: "string"
      start:
        type: "string"
        format: "date-time"
      end:
        type: "string"
        format: "date-time"
      options:
        type: "array"
        items:
          $ref: "#/definitions/Campaign_options"
    example:
      name: "name"
      start: "2000-01-23T04:56:07.000+00:00"
      options:
      - name: "name"
        votes: 0
        id: "id"
      - name: "name"
        votes: 0
        id: "id"
      end: "2000-01-23T04:56:07.000+00:00"
      id: "id"
  CampaignWithVoted:
    type: "object"
    properties:
      id:
        type: "string"
        readOnly: true
      name:
        type: "string"
      start:
        type: "string"
        format: "date-time"
      end:
        type: "string"
        format: "date-time"
      options:
        type: "array"
        items:
          $ref: "#/definitions/CampaignWithVoted_options"
    example:
      name: "name"
      start: "2000-01-23T04:56:07.000+00:00"
      options:
      - name: "name"
        voted: true
        votes: 0
        id: "id"
      - name: "name"
        voted: true
        votes: 0
        id: "id"
      end: "2000-01-23T04:56:07.000+00:00"
      id: "id"
  CampaignUpdateRequest:
    type: "object"
    properties:
      name:
        type: "string"
      start:
        type: "string"
        format: "date-time"
      end:
        type: "string"
        format: "date-time"
      options:
        type: "array"
        items:
          $ref: "#/definitions/CampaignUpdateRequest_options"
    example:
      name: "name"
      start: "2000-01-23T04:56:07.000+00:00"
      options:
      - name: "name"
        id: "id"
      - name: "name"
        id: "id"
      end: "2000-01-23T04:56:07.000+00:00"
  User:
    type: "object"
    properties:
      id:
        type: "string"
        readOnly: true
    example:
      id: "id"
  UserCreationRequest:
    type: "object"
    properties:
      hkid:
        type: "string"
    example:
      hkid: "hkid"
  VoteCreationRequest:
    type: "object"
    properties:
      userId:
        type: "string"
      hkid:
        type: "string"
      optionId:
        type: "string"
    example:
      optionId: "optionId"
      userId: "userId"
      hkid: "hkid"
  Campaign_options:
    type: "object"
    properties:
      id:
        type: "string"
        readOnly: true
      name:
        type: "string"
      votes:
        type: "integer"
        format: "int64"
        readOnly: true
    example:
      name: "name"
      votes: 0
      id: "id"
  CampaignWithVoted_options:
    type: "object"
    properties:
      id:
        type: "string"
        readOnly: true
      name:
        type: "string"
      votes:
        type: "integer"
        format: "int64"
        readOnly: true
      voted:
        type: "boolean"
        readOnly: true
    example:
      name: "name"
      voted: true
      votes: 0
      id: "id"
  CampaignUpdateRequest_options:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "string"
      name:
        type: "string"
    example:
      name: "name"
      id: "id"
